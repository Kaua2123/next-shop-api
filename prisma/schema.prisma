generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENT
  ADMIN
}

enum Sizes {
  P
  M
  G
  GG
}

enum Category {
  ELETRONICOS
  ESTILO
  LIVROS
  FERRAMENTAS
  JOGOS
}

enum Status {
  PENDENTE
  PREPARANDO
  ENVIADO
  ENTREGUE
}

enum PaymentStatus {
  PENDENTE
  PAGO
  FALHO
}

model User {
  id            Int     @id @default(autoincrement()) // autoincrement. 1, 2, 3...
  name          String
  email         String  @unique
  password      String
  cpfCnpj       String  @unique // cpf ou cnpj
  address       String?
  addressNumber String?
  province      String?
  postalCode    String?
  role          Role    @default(CLIENT)
  cart          Cart?
  order         Order[]

  @@map("users")
}

model Product {
  id           String       @id @default(uuid())
  name         String
  description  String
  price        Float
  stock        Int
  image_url    String?
  sizes        Sizes?
  category     Category
  isDisponible Boolean      @default(true)
  created_at   DateTime     @default(now())
  cart_items   CartItems[]
  order_items  OrderItems[]
  Promotion    Promotion[]

  @@map("products")
}

model Cart {
  id         String      @id @default(uuid())
  created_at DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int         @unique
  cart_items CartItems[]

  @@map("carts")
}

model Order {
  id               String        @id @default(uuid())
  status           Status        @default(PENDENTE)
  total_price      Float
  isInstallment    Boolean?      @default(false)
  installmentCount Int?
  payment_status   PaymentStatus @default(PENDENTE)
  created_at       DateTime      @default(now())
  user             User          @relation(fields: [userId], references: [id])
  userId           Int
  order_items      OrderItems[]

  @@map("orders")
}

model Promotion {
  id         String   @id @default(uuid())
  discount   Decimal
  start_date DateTime
  end_date   DateTime
  product    Product  @relation(fields: [productId], references: [id])
  productId  String

  @@map("promotions")
}

model CartItems {
  id         String   @id @default(uuid())
  quantity   Int
  cart       Cart     @relation(fields: [cartId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
  cartId     String
  productId  String
  created_at DateTime @default(now())

  @@map("cart_items")
}

model OrderItems {
  id         String   @id @default(uuid())
  quantity   Int
  price      Float
  order      Order    @relation(fields: [orderId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
  orderId    String
  productId  String
  created_at DateTime @default(now())

  @@map("order_items")
}
